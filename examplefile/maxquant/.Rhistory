1、0
print('hello world')
1 + 1
1 / 0
.libPaths()
install.packages(pacman)
install.packages('pacman')
library(pacman)
p_author()
p_load('devtools')
.libPaths()
p_load()
p_load('shiny')
p_load(shinyBS)
p_load(shinyjs)
p_load(shinyWidgets)
p_load(DT)
p_load(gdata)
p_load(ggplot2)
p_load(glmnet)
p_load(reshape2)
p_load(ggsci)
p_load(openxlsx)
p_load(data.table)
p_load(raster)
library(raster)
library(terra)
p_load(Metrics)
p_load(vegan)
p_load(tidyverse)
p_load(ggExtra)
p_load(cowplot)
p_load(Amelia)
p_load(e1071)
p_load(impute)
install.packages('BiocManager')
BiocManager::install('impute')
p_load(pcaMethods)
remove.packages('pcaMethods')
remove.packages(pcaMethods)
.libPaths()
.libPaths()
.libPaths()
library(pcaMethods)
remove.packages(pcaMethods)
remove.packages(pcaMethods, lib = )
.libPaths()
remove.packages(pcaMethods, lib = "E:/R/R-4.2.1/library")
remove.packages('pcaMethods', lib = "E:/R/R-4.2.1/library")
remove.packages('pcaMethods', lib = file.path("E:/R/R-4.2.1/library"))
BiocManager::install(pcaMethods)
BiocManager::install('pcaMethods')
install.packages(norm)
install.packages(norm)
install.packages('norm')
install.packages('imputeLCMD')
install.packages('VIM')
install.packages('rrcovNA')
install.packages('mice')
install.packages('missForest')
install.packages('missForest')
install.packages('DreamAI')
BiocManager::install(DreamAI)
BiocManager::install('DreamAI')
require("remotes")
install_github("WangLab-MSSM/DreamAI/Code")
install_github("WangLab-MSSM/DreamAI/Code")
install_github("WangLab-MSSM/DreamAI/Code")
require("remotes")
install_github("WangLab-MSSM/DreamAI/Code")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
gc()
library(NAguideR)
NAguideR_app()
library(NAguideR)
NAguideR_app()
library(NAguideR)
NAguideR_app()
NAguideR_app()
library(NAguideR)
NAguideR_app()
NAguideR_app()
NAguideR_app()
library(NAguideR)
NAguideR_app()
library(NAguideR)
NAguideR_app()
shiny::runApp('D:/工作/Bioinfomatics/v1_edit')
shiny::runApp('D:/工作/Bioinfomatics/v1')
shiny::runApp('D:/工作/Bioinfomatics/v1_edit')
shiny::runApp('D:/work/shiny_for_phosmap/v2')
runApp('D:/work/shiny_for_phosmap/v1')
# Enable load button every time file input is updated
observeEvent(input$fileinput_input, shinyjs::enable("button_input_load"))
shiny::runApp('D:/work/shiny_for_phosmap/shinyepico/shinyepico')
shiny::runApp('D:/work/shiny_for_phosmap/v2')
runApp('D:/work/shiny_for_phosmap/v2')
runApp('D:/work/shiny_for_phosmap/v2')
runApp('D:/work/shiny_for_phosmap/v2')
runApp('D:/work/shiny_for_phosmap/v2')
a = c("a.txt", "c.txt")
sapply(a, function(x){substring(x, 0, nchar(x)-4)})
class(sapply(a, function(x){substring(x, 0, nchar(x)-4)}))
b =sapply(a, function(x){substring(x, 0, nchar(x)-4)})
substring(a, 0, nchar(a)-4)
shiny::runApp('D:/work/shiny_for_phosmap/v3-preprocess')
runApp('D:/work/shiny_for_phosmap/v3-preprocess')
runApp('D:/work/shiny_for_phosmap/v3-preprocess')
runApp('D:/work/shiny_for_phosmap/v3-preprocess')
runApp('D:/work/shiny_for_phosmap/v3-preprocess')
shiny::runApp('D:/work/shiny_for_phosmap/v4')
shiny::runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
runApp('D:/work/shiny_for_phosmap/v4')
shiny::runApp('D:/work/shiny_for_phosmap/test/testxml')
runApp('D:/work/shiny_for_phosmap/test/testxml')
library(XML)
runApp('D:/work/shiny_for_phosmap/test/testxml')
inputfastaseq = "sp|A1L390-2|PKHG3_HUMAN Isoform 2 of Pleckstrin homology domain-containing family G member 3 OS=Homo sapiens OX=9606 GN=PLEKHG3;sp|A1L390-3|PKHG3_HUMAN Isoform 3 of Pleckstrin homology domain-containing family G member 3 OS=Homo sapiens OX=9606 GN=PLEKHG3;\nsp|A7E2V4-2|ZSWM8_HUMAN Isoform 2 of Zinc finger SWIM domain-containing protein 8 OS=Homo sapiens OX=9606 GN=ZSWIM8\nsp|A7E2V4-2|ZSWM8_HUMAN Isoform 2 of Zinc finger SWIM domain-containing protein 8 OS=Homo sapiens OX=9606 GN=ZSWIM8\nsp|E7EW31|PROB1_HUMAN Proline-rich basic protein 1 OS=Homo sapiens OX=9606 GN=PROB1 PE=2 SV=2
"
shiny::runApp('D:/work/shiny_for_phosmap/v5')
runApp('D:/work/shiny_for_phosmap/v5')
runApp('D:/work/shiny_for_phosmap/v5')
runApp('D:/work/shiny_for_phosmap/v5')
runApp('D:/work/shiny_for_phosmap/v5')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/testimg2bt/testimag2but')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v7_v5_online')
shiny::runApp('D:/work/shiny_for_phosmap/v8')
setRepositories()
getOption("repos")
load("D:/work/testBRAFi/.RData")
visualization_deps_with_scatter(limma_results_df, minFC = 2, minPvalue = 0.05, main = 'Differentially expressed proteins  \n with limma',
show_text = T, min_up_text = 70, min_down_text = 70)
library("PhosMap")
visualization_deps_with_scatter(limma_results_df, minFC = 2, minPvalue = 0.05, main = 'Differentially expressed proteins  \n with limma',
show_text = T, min_up_text = 70, min_down_text = 70)
limma_results_df$change <- as.factor(ifelse(limma_results_df$pvalue < 0.05 & abs(limma_results_df$logFC) > log2(2),ifelse(limma_results_df$logFC > log2(2),'UP','DOWN'),'NOT'))
# limma_results_df$sign <- ifelse((limma_results_df$pvalue < input$limmalabelpvalue & abs(limma_results_df$logFC) > log2(input$limmalabelfc)) | limma_results_df$ID == specifiedpoints,limma_results_df$ID,NA)
p <- ggplot(data = limma_results_df, aes(x = logFC, y = -log10(pvalue))) +
geom_point(aes(color = change), alpha=0.6, size=2) +
theme_bw(base_size = 15) +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
plot.title=element_text(size=24,  #大小
hjust=0.5, #位置
vjust=0.5)) +
geom_hline(yintercept = -log10(0.05), linetype = 4) +  # 读取参数
geom_vline(xintercept = c(-log2(2), log2(2)), linetype = 4) + # 读取参数
scale_color_manual(name = "", values = c("red", "blue", "grey"), limits = c("UP", "DOWN", "NOT"))
library("ggplot2")
# limma_results_df$sign <- ifelse((limma_results_df$pvalue < input$limmalabelpvalue & abs(limma_results_df$logFC) > log2(input$limmalabelfc)) | limma_results_df$ID == specifiedpoints,limma_results_df$ID,NA)
p <- ggplot(data = limma_results_df, aes(x = logFC, y = -log10(pvalue))) +
geom_point(aes(color = change), alpha=0.6, size=2) +
theme_bw(base_size = 15) +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
plot.title=element_text(size=24,  #大小
hjust=0.5, #位置
vjust=0.5)) +
geom_hline(yintercept = -log10(0.05), linetype = 4) +  # 读取参数
geom_vline(xintercept = c(-log2(2), log2(2)), linetype = 4) + # 读取参数
scale_color_manual(name = "", values = c("red", "blue", "grey"), limits = c("UP", "DOWN", "NOT"))
p
p <- ggplotly(p)
library("plotly")
p <- ggplotly(p)
p
fig <- plotly_build(p)
str(fig)
names(fig$x$data[[1]])
fig$x$data[[1]]$name
fig$x$data[[1]]$x
fig$x$data[[1]]$text
fig$x$data[[2]]$text
fig$x$data[[3]]$text
names(fig$x$data[[1]])
fig$x$data[[3]]$hoverinfo
fig$x$data[[3]]$name
fig$x$data[[3]]$y
fig$x$data[[3]]$mode
fig$x$data[[3]]$frame
fig$x$data[[3]]$yais
fig$x$data[[3]]$yaxis
fig$x$data[[3]]$x
fig$x$data[[3]]$y
shiny::runApp('D:/work/shiny_for_phosmap/v1_ref/shinyDepMap')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
fig$x$data[[3]]$text
# limma_results_df$sign <- ifelse((limma_results_df$pvalue < input$limmalabelpvalue & abs(limma_results_df$logFC) > log2(input$limmalabelfc)) | limma_results_df$ID == specifiedpoints,limma_results_df$ID,NA)
p <- ggplot(data = limma_results_df, aes(x = logFC, y = -log10(pvalue),
text = paste("Lab Parameter:", logFC,
"<br>Lab Test Day:", -log10(pvalue)))) +
geom_point(aes(color = change), alpha=0.6, size=2) +
theme_bw(base_size = 15) +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
plot.title=element_text(size=24,  #大小
hjust=0.5, #位置
vjust=0.5)) +
geom_hline(yintercept = -log10(0.05), linetype = 4) +  # 读取参数
geom_vline(xintercept = c(-log2(2), log2(2)), linetype = 4) + # 读取参数
scale_color_manual(name = "", values = c("red", "blue", "grey"), limits = c("UP", "DOWN", "NOT"))
p <- ggplotly(p)
p <- ggplotly(p)
p
# limma_results_df$sign <- ifelse((limma_results_df$pvalue < input$limmalabelpvalue & abs(limma_results_df$logFC) > log2(input$limmalabelfc)) | limma_results_df$ID == specifiedpoints,limma_results_df$ID,NA)
p <- ggplot(data = limma_results_df, aes(x = logFC, y = -log10(pvalue),
text = paste("Lab Parameter:", ID,
"<br>Lab Test Day:", -log10(pvalue)))) +
geom_point(aes(color = change), alpha=0.6, size=2) +
theme_bw(base_size = 15) +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
plot.title=element_text(size=24,  #大小
hjust=0.5, #位置
vjust=0.5)) +
geom_hline(yintercept = -log10(0.05), linetype = 4) +  # 读取参数
geom_vline(xintercept = c(-log2(2), log2(2)), linetype = 4) + # 读取参数
scale_color_manual(name = "", values = c("red", "blue", "grey"), limits = c("UP", "DOWN", "NOT"))
p <- ggplotly(p)
p
# limma_results_df$sign <- ifelse((limma_results_df$pvalue < input$limmalabelpvalue & abs(limma_results_df$logFC) > log2(input$limmalabelfc)) | limma_results_df$ID == specifiedpoints,limma_results_df$ID,NA)
p <- ggplot(data = limma_results_df, aes(x = logFC, y = -log10(pvalue),
text = paste("ID:", ID))) +
geom_point(aes(color = change), alpha=0.6, size=2) +
theme_bw(base_size = 15) +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
plot.title=element_text(size=24,  #大小
hjust=0.5, #位置
vjust=0.5)) +
geom_hline(yintercept = -log10(0.05), linetype = 4) +  # 读取参数
geom_vline(xintercept = c(-log2(2), log2(2)), linetype = 4) + # 读取参数
scale_color_manual(name = "", values = c("red", "blue", "grey"), limits = c("UP", "DOWN", "NOT"))
p <- ggplotly(p)
p
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
setwd("D:/work/shiny_for_phosmap/v7_v5_online/examplefile/maxquant")
read.csv("phosphorylation_exp_design_info.txt", header=T, sep="\t")
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
file.exists("Phospho (STY)Sites.txt")
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
runApp('D:/work/shiny_for_phosmap/v7_v5_online')
